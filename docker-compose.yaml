services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
  api_gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - user
      - product
      - order
      - kafka   
      - kafdrop
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  user:
    build:
      context: auth
      dockerfile: Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - kafdrop
      - user_db 
      - kafka
    env_file:
      - ./auth/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  product:
    build:
      context: product
      dockerfile: Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - kafdrop
      - product_db 
      - kafka
    env_file:
      - ./product/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  order:
    build:
      context: order
      dockerfile: Dockerfile
      target: development
    command: npm run start:dev
    depends_on:
      - kafdrop
      - order_db 
      - kafka
    env_file:
      - ./order/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  user_db:
    image: postgres:latest
    container_name: user_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: user
    ports:
      - "5432:5432" # Expose the database port
  product_db:
    image: postgres:latest
    container_name: product_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: product
    ports:
      - "5430:5432" # Expose the database port
  order_db:
    image: postgres:latest
    container_name: order_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: order
    ports:
      - "5434:5432" # Expose the database port

